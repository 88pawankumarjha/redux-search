{"version":3,"sources":["webpack:///4e93adc16fd1e109654c.worker.js","webpack:///webpack/bootstrap 4e93adc16fd1e109654c","webpack:///./src/lib/worker/Worker.js","webpack:///./src/lib/Search.js","webpack:///./src/lib/SearchIndex.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_Search","_Search2","search","self","addEventListener","event","data","method","uid","text","indexDocument","callbackId","query","results","postMessage","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_SearchIndex","_SearchIndex2","Search","this","searchIndex","uids","_this","fieldTokens","_tokenize","_sanitize","forEach","fieldToken","expandedTokens","_expandToken","expandedToken","tokens","keys","token","_length","prefixString","j","charAt","push","string","trim","toLocaleLowerCase","split","filter","SearchIndex","tokenToUidMap","uidMap","initialized","currentUidMap","_uid2","_uid","_uid3"],"mappings":"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","file":"4e93adc16fd1e109654c.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Search entry point to web worker.\n\t * Builds search index and performs searches on separate thread from the ui.\n\t * \n\t */\n\t'use strict';\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _Search = __webpack_require__(1);\n\t\n\tvar _Search2 = _interopRequireDefault(_Search);\n\t\n\tvar search = new _Search2['default']();\n\t\n\tself.addEventListener('message', function (event) {\n\t  var data = event.data;\n\t  var method = data.method;\n\t\n\t  switch (method) {\n\t    case 'indexDocument':\n\t      var uid = data.uid,\n\t          text = data.text;\n\t\n\t      search.indexDocument(uid, text);\n\t      break;\n\t    case 'search':\n\t      var callbackId = data.callbackId,\n\t          query = data.query;\n\t\n\t      var results = search.search(query);\n\t\n\t      self.postMessage({ callbackId: callbackId, results: results });\n\t      break;\n\t  }\n\t}, false);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _SearchIndex = __webpack_require__(2);\n\t\n\tvar _SearchIndex2 = _interopRequireDefault(_SearchIndex);\n\t\n\t/**\n\t * Client side, full text search utility.\n\t * Forked from JS search (github.com/bvaughn/js-search).\n\t */\n\t\n\tvar Search = (function () {\n\t\n\t  /**\n\t   * Constructor.\n\t   */\n\t\n\t  function Search() {\n\t    _classCallCheck(this, Search);\n\t\n\t    this.searchIndex = new _SearchIndex2['default']();\n\t    this.uids = {};\n\t  }\n\t\n\t  /**\n\t   * Adds or updates a uid in the search index and associates it with the specified text.\n\t   * Note that at this time uids can only be added or updated in the index, not removed.\n\t   *\n\t   * @param uid Uniquely identifies a searchable object\n\t   * @param text Text to associate with uid\n\t   */\n\t\n\t  _createClass(Search, [{\n\t    key: 'indexDocument',\n\t    value: function indexDocument(uid, text) {\n\t      var _this = this;\n\t\n\t      this.uids[uid] = true;\n\t\n\t      var fieldTokens = this._tokenize(this._sanitize(text));\n\t\n\t      fieldTokens.forEach(function (fieldToken) {\n\t        var expandedTokens = _this._expandToken(fieldToken);\n\t\n\t        expandedTokens.forEach(function (expandedToken) {\n\t          return _this.searchIndex.indexDocument(expandedToken, uid);\n\t        });\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Searches the current index for the specified query text.\n\t     * Only uids matching all of the words within the text will be accepted.\n\t     * If an empty query string is provided all indexed uids will be returned.\n\t     *\n\t     * Document searches are case-insensitive (e.g. \"search\" will match \"Search\").\n\t     * Document searches use substring matching (e.g. \"na\" and \"me\" will both match \"name\").\n\t     *\n\t     * @param query Searchable query text\n\t     * @return Array of uids\n\t     */\n\t  }, {\n\t    key: 'search',\n\t    value: function search(query) {\n\t      if (!query) {\n\t        return Object.keys(this.uids);\n\t      } else {\n\t        var tokens = this._tokenize(this._sanitize(query));\n\t\n\t        return this.searchIndex.search(tokens);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Index strategy based on 'all-substrings-index-strategy.ts' in github.com/bvaughn/js-search/\n\t     *\n\t     * @private\n\t     */\n\t  }, {\n\t    key: '_expandToken',\n\t    value: function _expandToken(token) {\n\t      var expandedTokens = [];\n\t\n\t      for (var i = 0, _length = token.length; i < _length; ++i) {\n\t        var prefixString = '';\n\t\n\t        for (var j = i; j < _length; ++j) {\n\t          prefixString += token.charAt(j);\n\t          expandedTokens.push(prefixString);\n\t        }\n\t      }\n\t\n\t      return expandedTokens;\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     */\n\t  }, {\n\t    key: '_sanitize',\n\t    value: function _sanitize(string) {\n\t      return string.trim().toLocaleLowerCase();\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     */\n\t  }, {\n\t    key: '_tokenize',\n\t    value: function _tokenize(text) {\n\t      return text.split(/\\s+/).filter(function (text) {\n\t        return text;\n\t      }); // Remove empty tokens\n\t    }\n\t  }]);\n\t\n\t  return Search;\n\t})();\n\t\n\texports['default'] = Search;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\n\t\n\t/**\n\t * Maps search tokens to uids.\n\t * This structure is used by the Search class to optimize search operations.\n\t * Forked from JS search (github.com/bvaughn/js-search).\n\t */\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SearchIndex = (function () {\n\t  function SearchIndex() {\n\t    _classCallCheck(this, SearchIndex);\n\t\n\t    this.tokenToUidMap = {};\n\t  }\n\t\n\t  /**\n\t   * Maps the specified token to a uid.\n\t   *\n\t   * @param token Searchable token (e.g. \"road\")\n\t   * @param uid Identifies a document within the searchable corpus\n\t   */\n\t\n\t  _createClass(SearchIndex, [{\n\t    key: \"indexDocument\",\n\t    value: function indexDocument(token, uid) {\n\t      if (!this.tokenToUidMap[token]) {\n\t        this.tokenToUidMap[token] = {};\n\t      }\n\t\n\t      this.tokenToUidMap[token][uid] = uid;\n\t    }\n\t\n\t    /**\n\t     * Finds uids that have been mapped to the set of tokens specified.\n\t     * Only uids that have been mapped to all tokens will be returned.\n\t     *\n\t     * @param tokens Array of searchable tokens (e.g. [\"long\", \"road\"])\n\t     * @return Array of uids that have been associated with the set of search tokens\n\t     */\n\t  }, {\n\t    key: \"search\",\n\t    value: function search(tokens) {\n\t      var _this = this;\n\t\n\t      var uidMap = {};\n\t      var initialized = false;\n\t\n\t      tokens.forEach(function (token) {\n\t        var currentUidMap = _this.tokenToUidMap[token] || {};\n\t\n\t        if (!initialized) {\n\t          initialized = true;\n\t\n\t          for (var _uid in currentUidMap) {\n\t            uidMap[_uid] = currentUidMap[_uid];\n\t          }\n\t        } else {\n\t          for (var _uid2 in uidMap) {\n\t            if (!currentUidMap[_uid2]) {\n\t              delete uidMap[_uid2];\n\t            }\n\t          }\n\t        }\n\t      });\n\t\n\t      var uids = [];\n\t\n\t      for (var _uid3 in uidMap) {\n\t        uids.push(uidMap[_uid3]);\n\t      }\n\t\n\t      return uids;\n\t    }\n\t  }]);\n\t\n\t  return SearchIndex;\n\t})();\n\t\n\texports[\"default\"] = SearchIndex;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** 4e93adc16fd1e109654c.worker.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4e93adc16fd1e109654c\n **/","/**\n * Search entry point to web worker.\n * Builds search index and performs searches on separate thread from the ui.\n * @flow\n */\nimport Search from '../Search'\n\nconst search = new Search()\n\nself.addEventListener('message', event => {\n  const { data } = event\n  const { method } = data\n\n  switch (method) {\n    case 'indexDocument':\n      const { uid, text } = data\n\n      search.indexDocument(uid, text)\n      break\n    case 'search':\n      const { callbackId, query } = data\n\n      const results = search.search(query)\n\n      self.postMessage({ callbackId, results })\n      break\n  }\n}, false)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/worker/Worker.js\n **/","/** @flow */\nimport SearchIndex from './SearchIndex'\n\n/**\n * Client side, full text search utility.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class Search {\n\n  /**\n   * Constructor.\n   */\n  constructor () {\n    this.searchIndex = new SearchIndex()\n    this.uids = {}\n  }\n\n  /**\n   * Adds or updates a uid in the search index and associates it with the specified text.\n   * Note that at this time uids can only be added or updated in the index, not removed.\n   *\n   * @param uid Uniquely identifies a searchable object\n   * @param text Text to associate with uid\n   */\n  indexDocument (uid: any, text: string): Search {\n    this.uids[uid] = true\n\n    var fieldTokens: Array<string> = this._tokenize(this._sanitize(text))\n\n    fieldTokens.forEach(fieldToken => {\n      var expandedTokens: Array<string> = this._expandToken(fieldToken)\n\n      expandedTokens.forEach(expandedToken =>\n        this.searchIndex.indexDocument(expandedToken, uid)\n      )\n    })\n\n    return this\n  }\n\n  /**\n   * Searches the current index for the specified query text.\n   * Only uids matching all of the words within the text will be accepted.\n   * If an empty query string is provided all indexed uids will be returned.\n   *\n   * Document searches are case-insensitive (e.g. \"search\" will match \"Search\").\n   * Document searches use substring matching (e.g. \"na\" and \"me\" will both match \"name\").\n   *\n   * @param query Searchable query text\n   * @return Array of uids\n   */\n  search (query: string): Array<any> {\n    if (!query) {\n      return Object.keys(this.uids)\n    } else {\n      var tokens: Array<string> = this._tokenize(this._sanitize(query))\n\n      return this.searchIndex.search(tokens)\n    }\n  }\n\n  /**\n   * Index strategy based on 'all-substrings-index-strategy.ts' in github.com/bvaughn/js-search/\n   *\n   * @private\n   */\n  _expandToken (token: string): Array<string> {\n    var expandedTokens = []\n\n    for (let i = 0, length = token.length; i < length; ++i) {\n      let prefixString: string = ''\n\n      for (let j = i; j < length; ++j) {\n        prefixString += token.charAt(j)\n        expandedTokens.push(prefixString)\n      }\n    }\n\n    return expandedTokens\n  }\n\n  /**\n   * @private\n   */\n  _sanitize (string: string): string {\n    return string.trim().toLocaleLowerCase()\n  }\n\n  /**\n   * @private\n   */\n  _tokenize (text: string): Array<string> {\n    return text\n      .split(/\\s+/)\n      .filter(text => text) // Remove empty tokens\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/Search.js\n **/","/** @flow */\n\n/**\n * Maps search tokens to uids.\n * This structure is used by the Search class to optimize search operations.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class SearchIndex {\n  tokenToUidMap: { [token: string]: any }\n\n  constructor () {\n    this.tokenToUidMap = {}\n  }\n\n  /**\n   * Maps the specified token to a uid.\n   *\n   * @param token Searchable token (e.g. \"road\")\n   * @param uid Identifies a document within the searchable corpus\n   */\n  indexDocument (token: string, uid: any): void {\n    if (!this.tokenToUidMap[token]) {\n      this.tokenToUidMap[token] = {}\n    }\n\n    this.tokenToUidMap[token][uid] = uid\n  }\n\n  /**\n   * Finds uids that have been mapped to the set of tokens specified.\n   * Only uids that have been mapped to all tokens will be returned.\n   *\n   * @param tokens Array of searchable tokens (e.g. [\"long\", \"road\"])\n   * @return Array of uids that have been associated with the set of search tokens\n   */\n  search (tokens: Array<string>): Array<any> {\n    let uidMap: {[uid: any]: any} = {}\n    let initialized = false\n\n    tokens.forEach(token => {\n      let currentUidMap: {[uid: any]: any} = this.tokenToUidMap[token] || {}\n\n      if (!initialized) {\n        initialized = true\n\n        for (let uid in currentUidMap) {\n          uidMap[uid] = currentUidMap[uid]\n        }\n      } else {\n        for (let uid in uidMap) {\n          if (!currentUidMap[uid]) {\n            delete uidMap[uid]\n          }\n        }\n      }\n    })\n\n    let uids: Array<any> = []\n\n    for (let uid in uidMap) {\n      uids.push(uidMap[uid])\n    }\n\n    return uids\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/SearchIndex.js\n **/"],"sourceRoot":""}